name: Check for New Upstream Release

on:
  workflow_dispatch:
  schedule:
    # Run weekly on Monday at 00:00 UTC to check for new releases
    - cron: '0 0 * * 1'

jobs:
  check-and-tag:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Get latest riscv-gnu-toolchain release
        id: get_version
        run: |
          # Get the latest release tag (date-based format like 2025.10.18)
          LATEST_TAG=$(curl -s https://api.github.com/repos/riscv-collab/riscv-gnu-toolchain/releases | jq -r '.[0].tag_name')
          echo "release_tag=${LATEST_TAG}" >> $GITHUB_OUTPUT
          echo "Latest upstream release tag: ${LATEST_TAG}"

      - name: Check if tag already exists
        id: check_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="riscv-toolchain-${{ steps.get_version.outputs.release_tag }}"

          # Check if tag already exists
          if git ls-remote --tags origin | grep -q "refs/tags/${TAG_NAME}$"; then
            echo "Tag $TAG_NAME already exists, skipping"
            echo "should_tag=false" >> $GITHUB_OUTPUT
          else
            echo "Tag $TAG_NAME does not exist, will create it"
            echo "should_tag=true" >> $GITHUB_OUTPUT
          fi

      - name: Create and push tag
        if: steps.check_tag.outputs.should_tag == 'true'
        run: |
          TAG_NAME="riscv-toolchain-${{ steps.get_version.outputs.release_tag }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG_NAME" -m "Release RISC-V GNU Toolchain ${{ steps.get_version.outputs.release_tag }}"
          git push origin "$TAG_NAME"
          echo "Created and pushed tag: $TAG_NAME"
          echo "This will trigger the build workflow automatically"
